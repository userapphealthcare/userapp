{"version":3,"sources":["profile.jpg","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","abi","constant","inputs","name","type","outputs","payable","stateMutability","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","account","email","heartRate","bodyTemperature","patientCount","blockchain","web3","Web3","givenProvider","eth","net","getNetworkType","getAccounts","setState","HealthcareContract","Contract","methods","getPatientCount","_customerId","prompt","length","customerId","slice","console","log","getPatient","patientData","document","location","reload","alert","react_default","a","createElement","className","class","href","src","profile","placeholder","rows","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dc305ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.d492d366.jpg\";","// export const contractAddress = '0x7cc0979471ff3f79a6f630e57000474759c5c2bf'\n\nexport const contractAddress='0xa7f80d29e40b6cdc8a638310e19b39aae782b08b'\n\nexport const abi = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_email\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_heartRate\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_bodyTemperature\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateData\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"patient\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"email\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"heartRate\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"bodyTemperature\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"index\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getPatient\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"ownerAddr\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getPatientCount\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t}\n]\n\n\nexport default abi;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport emailjs from 'emailjs';\nimport './App.css';\nimport {contractAddress, abi} from './data.js';\nimport profile from './profile.jpg';\n\n\nclass App extends Component {\n  componentWillMount(){\n    this.blockchain()\n  }\n\n\nasync blockchain() {  \n\n\n  const web3 = new Web3(Web3.givenProvider || 'http://127.0.0.1:8545');\n  const network = await web3.eth.net.getNetworkType()\n  const account = await web3.eth.getAccounts()\n  this.setState({account});\n\n  var HealthcareContract = new web3.eth.Contract(abi, contractAddress);\n  // console.log(HealthcareContract.methods);\n\n  const patientCount = await HealthcareContract.methods.getPatientCount().call()\n  this.setState({patientCount})\n\n\n  var _customerId = prompt('Enter Customer Id');\n  if (_customerId.length>3){\n    customerId = _customerId.slice(3, );\n\n    if (customerId<patientCount){\n      console.log('Sucess')\n    \n      const patientData = await HealthcareContract.methods.getPatient(customerId).call();\n\n      const id = patientData[0];\n      const email = patientData[2];\n      var customerId;\n      \n        if (_customerId===id){\n            console.log('Correct Id');\n            var _email = prompt('Enter your email');\n            \n            if (_email === email){\n              console.log('correct email.');\n              const name = patientData[1];\n              const heartRate = patientData[3];\n              const bodyTemperature = patientData[4];\n      \n              this.setState({name});\n              this.setState({email});\n              this.setState({heartRate});\n              this.setState({bodyTemperature});\n            }\n            else {\n              console.log('wrong email.');\n              document.location.reload();\n            }\n        }\n        else{\n          alert('Wrong Id');\n          document.location.reload(); \n        }\n\n    }\n    else{\n      alert('Wrong Id');\n      console.log('Sorry')\n      document.location.reload();\n    }\n\n  }\n  else{\n    customerId=0;\n    console.log('Wrong Id');\n    alert('Wrong Id');\n    document.location.reload();\n  }\n\n}\n\n\n\n\nconstructor(props) {\n  super (props)\n  this.state = {\n    id: '',\n    account: 'null',\n    name: 'NaN',\n    email: 'null@null.com',\n    heartRate: 'NULL',\n    bodyTemperature: 'NULL',\n    patientCount: 0,\n\n  }\n}\n\n\n  render() {\n    return (\n      <div className=\"\">\n\n\n<div class=\"blocks\">\n\n{this.state.patientCount} blocks\n\n</div>\n\n\n      {/* // Header part of the webpage. */}\n\n      <div className = \"rightNav\">\n\n        <div className=\"dropdown\">\n        <button className=\"dropbtn\">ethereumAddress<i className=\"fa fa-caret-down\"></i></button>\n        <div className=\"dropdown-content\">\n        {this.state.account}\n        </div>\n        </div>\n\n      </div>\n\n\n      <div class=\"top_section\">     \n        \n                <div class=\"row nopadding\">\n                   <div class=\"col-md-12 nopadding\">\n                      <div class=\"profile_name\">\n                         <div class=\"circle\">\n                            <a href=\"#\"><img src={profile}></img></a>\n                         </div>\n                         <h1>{this.state.name}</h1>\n                         <p class=\"position\"><i>{this.state.email}</i></p>\n                         <p class=\"intro\">\n                        Your heart rate is {this.state.heartRate}\n                         <br></br>\n                        Your temperature is {this.state.bodyTemperature}\n                        </p>\n                        <p class=\"intro\">\n                        <center>\n                        <div className = 'msg'>\n                            This is your data stored in our private blockchain.\n                        </div>\n                        </center>\n                        </p>\n\n                      </div>\n                   </div>\n\n                </div>    \n             </div>\n\n\n\n\n{/* another section */}\n <div class =\"centercont\">         \n\n             <div class=\"myprofile_section\">\n         <div class=\"row nopadding\">\n            <div class=\"col-md-12 nopadding\">\n               <h1>CONTACT US</h1>\n               <p>Looking for ways to connect with the core team? \n                 Fill this contact form and soon our core team will reach to you. This is Healthcare Blockchain, We are using Blockchain to save the \n                 healthcare data and making it tamper-proof.\n                </p>\n               <div class=\"col-md-3 nopadding\"></div>\n               <div class=\"col-md-6 nopadding\">\n                  <div class=\"form-section\">\n                     <form>\n                        <input type=\"text\" placeholder=\"Name\"></input><br></br>\n                        <input type=\"email\" placeholder=\"Email\"></input><br></br>\n                        <textarea type=\"message\" placeholder=\"Message\" rows=\"5\"></textarea> <br></br>\n                        <button type=\"submit\">SEND <i class=\"fa fa-send\"></i></button>\n                     </form>\n                  </div>\n                  \n               </div>\n               <div class=\"col-md-3 nopadding\"></div>\n            </div>\n         \n         </div>\n     \n      </div>\n\n</div>   \n\n\n\n{/* another section */}\n<div class=\"test-section\">\n         <div class=\"row nopadding\">\n            <div class=\"col-md-12 nopadding\">\n               <h1>HEALTHCARE BLOCKCHAIN</h1>\n               <ul>\n                  <li><a href=\"#\">I</a></li>\n                  <li><a href=\"#\">P</a></li>\n                  <li><a href=\"#\">E</a></li>\n                  <li><a href=\"#\">C</a></li>\n                \n               </ul>\n               <br></br>\n               <br></br>\n               <p>Blockchain technology is one of the most important and disruptive technologies in the world. \n                 Multiple industries are adopting the blockchain technology to innovate the way they function. \n                 One of the industries that are looking to adopt the blockchain is the healthcare industry. </p>\n            </div>\n        \n         </div>\n      \n      </div>\n\n{/* end */}\n\n\n\n\n\n\n\n\n      </div>\n\n    );\n  \n    }\n  \n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}